\contentsline {section}{\numberline {1}Design Principles}{1}{section.1}
\contentsline {subsection}{\numberline {1.1}Divide and Conquer}{1}{subsection.1.1}
\contentsline {subsubsection}{\numberline {1.1.1}Merge Sort}{1}{subsubsection.1.1.1}
\contentsline {paragraph}{Description}{1}{paragraph*.2}
\contentsline {paragraph}{Pseudo-code}{1}{paragraph*.3}
\contentsline {paragraph}{Advantages}{1}{paragraph*.4}
\contentsline {paragraph}{Disadvantages}{1}{paragraph*.5}
\contentsline {paragraph}{Haskell Implementation}{1}{paragraph*.6}
\contentsline {subsubsection}{\numberline {1.1.2}Binary Search}{2}{subsubsection.1.1.2}
\contentsline {paragraph}{Description and Requirements}{2}{paragraph*.7}
\contentsline {paragraph}{Running time}{2}{paragraph*.8}
\contentsline {subsubsection}{\numberline {1.1.3}Selection Problem}{2}{subsubsection.1.1.3}
\contentsline {subsubsection}{\numberline {1.1.4}Integer Multiplication}{2}{subsubsection.1.1.4}
\contentsline {subsubsection}{\numberline {1.1.5}Matrix Multiplication}{2}{subsubsection.1.1.5}
\contentsline {subsection}{\numberline {1.2}Dynamic Programming}{3}{subsection.1.2}
\contentsline {subsubsection}{\numberline {1.2.1}Knapsack Problems with Repetition}{3}{subsubsection.1.2.1}
\contentsline {subsubsection}{\numberline {1.2.2}Knapsack Problems without Repetition}{3}{subsubsection.1.2.2}
\contentsline {subsubsection}{\numberline {1.2.3}Change Making Problem}{3}{subsubsection.1.2.3}
\contentsline {subsubsection}{\numberline {1.2.4}Edit Distance Problem (Levenshtein Distance)}{3}{subsubsection.1.2.4}
\contentsline {subsubsection}{\numberline {1.2.5}Travelling Salesman Problem}{4}{subsubsection.1.2.5}
\contentsline {subsubsection}{\numberline {1.2.6}All-pairs shortest path}{4}{subsubsection.1.2.6}
\contentsline {subsection}{\numberline {1.3}Greedy Algorithms}{4}{subsection.1.3}
\contentsline {subsubsection}{\numberline {1.3.1}Change Making Algorithms}{4}{subsubsection.1.3.1}
\contentsline {paragraph}{The Greedy Approach}{4}{paragraph*.9}
\contentsline {subsubsection}{\numberline {1.3.2}Minimum Spanning Tree Algorithm}{4}{subsubsection.1.3.2}
\contentsline {subsubsection}{\numberline {1.3.3}Kruskal's Algorithm}{4}{subsubsection.1.3.3}
\contentsline {paragraph}{Description}{4}{paragraph*.10}
\contentsline {paragraph}{Running Time}{5}{paragraph*.11}
\contentsline {subsubsection}{\numberline {1.3.4}Prim's Algorithm}{5}{subsubsection.1.3.4}
\contentsline {paragraph}{Description}{5}{paragraph*.12}
\contentsline {paragraph}{Running Time}{5}{paragraph*.13}
\contentsline {subsection}{\numberline {1.4}Dynamic Programming vs. Divide-and-Conquer}{5}{subsection.1.4}
\contentsline {section}{\numberline {2}Data Structures}{5}{section.2}
\contentsline {subsection}{\numberline {2.1}Heaps}{5}{subsection.2.1}
\contentsline {subsubsection}{\numberline {2.1.1}Representation}{5}{subsubsection.2.1.1}
\contentsline {subsubsection}{\numberline {2.1.2}Maintaining heaps}{5}{subsubsection.2.1.2}
\contentsline {paragraph}{Running Time}{5}{paragraph*.14}
\contentsline {paragraph}{Correctness}{5}{paragraph*.15}
\contentsline {paragraph}{Running Time}{6}{paragraph*.16}
