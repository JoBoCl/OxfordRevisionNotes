\BOOKMARK [1][-]{section.1}{Analysis}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{Asymptotic Notation}{section.1}% 2
\BOOKMARK [3][-]{subsubsection.1.1.1}{Big-O Notation}{subsection.1.1}% 3
\BOOKMARK [3][-]{subsubsection.1.1.2}{Big-Omega Notation}{subsection.1.1}% 4
\BOOKMARK [3][-]{subsubsection.1.1.3}{Big-Theta Notation}{subsection.1.1}% 5
\BOOKMARK [2][-]{subsection.1.2}{Recurrence Relations}{section.1}% 6
\BOOKMARK [3][-]{subsubsection.1.2.1}{The Master Theorem}{subsection.1.2}% 7
\BOOKMARK [2][-]{subsection.1.3}{Correctness and Invariants}{section.1}% 8
\BOOKMARK [1][-]{section.2}{Design Principles}{}% 9
\BOOKMARK [2][-]{subsection.2.1}{Divide and Conquer}{section.2}% 10
\BOOKMARK [3][-]{subsubsection.2.1.1}{Merge Sort}{subsection.2.1}% 11
\BOOKMARK [3][-]{subsubsection.2.1.2}{Binary Search}{subsection.2.1}% 12
\BOOKMARK [3][-]{subsubsection.2.1.3}{Selection Problem}{subsection.2.1}% 13
\BOOKMARK [3][-]{subsubsection.2.1.4}{Integer Multiplication}{subsection.2.1}% 14
\BOOKMARK [3][-]{subsubsection.2.1.5}{Matrix Multiplication}{subsection.2.1}% 15
\BOOKMARK [2][-]{subsection.2.2}{Dynamic Programming}{section.2}% 16
\BOOKMARK [3][-]{subsubsection.2.2.1}{Knapsack Problems with Repetition}{subsection.2.2}% 17
\BOOKMARK [3][-]{subsubsection.2.2.2}{Knapsack Problems without Repetition}{subsection.2.2}% 18
\BOOKMARK [3][-]{subsubsection.2.2.3}{Change Making Problem}{subsection.2.2}% 19
\BOOKMARK [3][-]{subsubsection.2.2.4}{Edit Distance Problem \(Levenshtein Distance\)}{subsection.2.2}% 20
\BOOKMARK [3][-]{subsubsection.2.2.5}{Travelling Salesman Problem}{subsection.2.2}% 21
\BOOKMARK [3][-]{subsubsection.2.2.6}{All-pairs shortest path}{subsection.2.2}% 22
\BOOKMARK [2][-]{subsection.2.3}{Greedy Algorithms}{section.2}% 23
\BOOKMARK [3][-]{subsubsection.2.3.1}{Change Making Algorithms}{subsection.2.3}% 24
\BOOKMARK [3][-]{subsubsection.2.3.2}{Minimum Spanning Tree Algorithm}{subsection.2.3}% 25
\BOOKMARK [3][-]{subsubsection.2.3.3}{Kruskal's Algorithm}{subsection.2.3}% 26
\BOOKMARK [3][-]{subsubsection.2.3.4}{Prim's Algorithm}{subsection.2.3}% 27
\BOOKMARK [2][-]{subsection.2.4}{Dynamic Programming vs. Divide-and-Conquer}{section.2}% 28
\BOOKMARK [1][-]{section.3}{Data Structures}{}% 29
\BOOKMARK [2][-]{subsection.3.1}{Heaps}{section.3}% 30
\BOOKMARK [3][-]{subsubsection.3.1.1}{Representation}{subsection.3.1}% 31
\BOOKMARK [3][-]{subsubsection.3.1.2}{Maintaining heaps}{subsection.3.1}% 32
\BOOKMARK [3][-]{subsubsection.3.1.3}{Heap-Sort}{subsection.3.1}% 33
\BOOKMARK [2][-]{subsection.3.2}{Priority Queues}{section.3}% 34
\BOOKMARK [3][-]{subsubsection.3.2.1}{Implementation}{subsection.3.2}% 35
\BOOKMARK [2][-]{subsection.3.3}{Queues}{section.3}% 36
\BOOKMARK [3][-]{subsubsection.3.3.1}{Implementation}{subsection.3.3}% 37
\BOOKMARK [2][-]{subsection.3.4}{Graphs}{section.3}% 38
\BOOKMARK [3][-]{subsubsection.3.4.1}{Definitions}{subsection.3.4}% 39
\BOOKMARK [3][-]{subsubsection.3.4.2}{Representations}{subsection.3.4}% 40
\BOOKMARK [3][-]{subsubsection.3.4.3}{Depth-first Search \(DFS\)}{subsection.3.4}% 41
\BOOKMARK [3][-]{subsubsection.3.4.4}{Topological Sort}{subsection.3.4}% 42
\BOOKMARK [3][-]{subsubsection.3.4.5}{Strongly Connected Components}{subsection.3.4}% 43
\BOOKMARK [3][-]{subsubsection.3.4.6}{Breadth-First Search \(BFS\)}{subsection.3.4}% 44
\BOOKMARK [3][-]{subsubsection.3.4.7}{Shortest Path Problems}{subsection.3.4}% 45
\BOOKMARK [3][-]{subsubsection.3.4.8}{Djikstra's Algorithm}{subsection.3.4}% 46
\BOOKMARK [3][-]{subsubsection.3.4.9}{Floyd-Warshall}{subsection.3.4}% 47
\BOOKMARK [3][-]{subsubsection.3.4.10}{Bellman-Ford}{subsection.3.4}% 48
